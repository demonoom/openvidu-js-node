
修改openvidu-browser-*.*.js

1:OpenVidu.prototype.checkSystemRequirements
方法中增加:&&(browser !== 'Electron') 逻辑

2:WebRtcPeer.prototype.start

  if (!!_this.configuration.mediaStream) {
                  for (var _i = 0, _a = _this.configuration.mediaStream.getTracks(); _i < _a.length; _i++) {
                     var track = _a[_i];
                     _this.pc.addTrack(track, _this.configuration.mediaStream);
                  }
                  resolve();
  }

  改为:(主要为解决chome内核)

  if (!!_this.configuration.mediaStream) {
                  if(typeof _this.pc.addTrack != 'undefined' && _this.pc.addTrack instanceof Function){
                      for (var _i = 0, _a = _this.configuration.mediaStream.getTracks(); _i < _a.length; _i++) {
                          var track = _a[_i];
                          _this.pc.addTrack(track, _this.configuration.mediaStream);
                      }
                  }else{
                      _this.pc.addStream(_this.configuration.mediaStream);
                  }
                  resolve();
  }

  3:在2.8.0以上版本 OpenVidu.prototype.reconnectedCallback
    OpenVidu.prototype.reconnectedCallback = function () {
            var _this = this;
            console.warn('Websocket reconnected');
            if (this.isRoomAvailable()) {
                this.sendRequest('connect', { sessionId: this.session.connection.rpcSessionId }, function (error, response) {
                     if (!!error) {
                         console.error(error);
                         _this.session.onLostConnection("networkDisconnect");
                         _this.jsonRpcClient.close(4101, "Reconnection fault");
                     }
                     else {
                         _this.jsonRpcClient.resetPing();
                         _this.session.onRecoveredConnection();
                     }
                });
            }
            else {
                alert('Connection error. Please reload page.');
            }
        };

     改为:

     OpenVidu.prototype.reconnectedCallback = function () {
             var _this = this;
             console.warn('Websocket reconnected');
             if (this.isRoomAvailable()) {
                 // this.sendRequest('connect', { sessionId: this.session.connection.rpcSessionId }, function (error, response) {
                 //     if (!!error) {
                 //         console.error(error);
                 //         _this.session.onLostConnection("networkDisconnect");
                 //         _this.jsonRpcClient.close(4101, "Reconnection fault");
                 //     }
                 //     else {
                 //         _this.jsonRpcClient.resetPing();
                 //         _this.session.onRecoveredConnection();
                 //     }
                 // });
                 _this.session.ee.emitEvent('connectionRecovered', []);
             }
             else {
                 alert('Connection error. Please reload page.');
             }
         };